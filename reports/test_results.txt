warning: unused variable: `graph_provider`
  --> crates/agent-mem-config/src/factory.rs:80:13
   |
80 |         let graph_provider = env::var("AGENT_MEM_GRAPH_PROVIDER").ok();
   |             ^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_graph_provider`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `api_key`
  --> crates/agent-mem-config/src/factory.rs:94:19
   |
94 |         if let Ok(api_key) = env::var("PINECONE_API_KEY") {
   |                   ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_api_key`

warning: `agent-mem-config` (lib) generated 2 warnings
warning: unused import: `ImportanceLevel`
 --> crates/agent-mem-core/src/lifecycle.rs:3:40
  |
3 | use crate::types::{Memory, MemoryType, ImportanceLevel};
  |                                        ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `Entity` and `Relation`
   --> crates/agent-mem-core/src/types.rs:182:72
    |
182 | ...emoryType as TraitMemoryType, Entity, Relation};
    |                                  ^^^^^^  ^^^^^^^^

warning: unused imports: `Deserialize` and `Serialize`
 --> crates/agent-mem-core/src/operations.rs:7:13
  |
7 | use serde::{Deserialize, Serialize};
  |             ^^^^^^^^^^^  ^^^^^^^^^

warning: unused imports: `MemoryType` and `Memory`
 --> crates/agent-mem-core/src/hierarchical_service.rs:8:20
  |
8 | use crate::types::{Memory, MemoryType, ImportanceLevel};
  |                    ^^^^^^  ^^^^^^^^^^

warning: unused import: `crate::types::ImportanceLevel`
 --> crates/agent-mem-core/src/conflict_resolver.rs:7:5
  |
7 | use crate::types::ImportanceLevel;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `AgentMemError`
 --> crates/agent-mem-core/src/conflict_resolver.rs:8:32
  |
8 | use agent_mem_traits::{Result, AgentMemError};
  |                                ^^^^^^^^^^^^^

warning: unused import: `crate::types::ImportanceLevel`
 --> crates/agent-mem-core/src/hierarchy_manager.rs:8:5
  |
8 | use crate::types::ImportanceLevel;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `AgentMemError`
 --> crates/agent-mem-core/src/hierarchy_manager.rs:9:32
  |
9 | use agent_mem_traits::{Result, AgentMemError};
  |                                ^^^^^^^^^^^^^

warning: unused imports: `BTreeMap` and `VecDeque`
  --> crates/agent-mem-core/src/hierarchy_manager.rs:11:33
   |
11 | use std::collections::{HashMap, BTreeMap, VecDeque};
   |                                 ^^^^^^^^  ^^^^^^^^

warning: unused import: `Duration`
  --> crates/agent-mem-core/src/hierarchy_manager.rs:14:29
   |
14 | use chrono::{DateTime, Utc, Duration};
   |                             ^^^^^^^^

warning: unused import: `MemoryType`
 --> crates/agent-mem-core/src/importance_scorer.rs:7:37
  |
7 | use crate::types::{ImportanceLevel, MemoryType};
  |                                     ^^^^^^^^^^

warning: unused import: `AgentMemError`
 --> crates/agent-mem-core/src/importance_scorer.rs:8:32
  |
8 | use agent_mem_traits::{Result, AgentMemError};
  |                                ^^^^^^^^^^^^^

warning: unused import: `Duration`
  --> crates/agent-mem-core/src/importance_scorer.rs:11:29
   |
11 | use chrono::{DateTime, Utc, Duration, Timelike};
   |                             ^^^^^^^^

warning: unused import: `uuid::Uuid`
  --> crates/agent-mem-core/src/importance_scorer.rs:12:5
   |
12 | use uuid::Uuid;
   |     ^^^^^^^^^^

warning: unused import: `HierarchicalMemoryRecord`
 --> crates/agent-mem-core/src/adaptive_strategy.rs:6:35
  |
6 | use crate::hierarchical_service::{HierarchicalMemoryRecord, ConflictResolutionStr...
  |                                   ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `ImportanceFactors`
 --> crates/agent-mem-core/src/adaptive_strategy.rs:7:32
  |
7 | use crate::importance_scorer::{ImportanceFactors, ScoringContext};
  |                                ^^^^^^^^^^^^^^^^^

warning: unused imports: `ImportanceLevel` and `MemoryType`
 --> crates/agent-mem-core/src/adaptive_strategy.rs:8:20
  |
8 | use crate::types::{ImportanceLevel, MemoryType};
  |                    ^^^^^^^^^^^^^^^  ^^^^^^^^^^

warning: unused import: `AgentMemError`
 --> crates/agent-mem-core/src/adaptive_strategy.rs:9:32
  |
9 | use agent_mem_traits::{Result, AgentMemError};
  |                                ^^^^^^^^^^^^^

warning: unused import: `uuid::Uuid`
  --> crates/agent-mem-core/src/adaptive_strategy.rs:13:5
   |
13 | use uuid::Uuid;
   |     ^^^^^^^^^^

warning: unused import: `crate::adaptive_strategy::MemoryStrategy`
 --> crates/agent-mem-core/src/context_aware_search.rs:8:5
  |
8 | use crate::adaptive_strategy::MemoryStrategy;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `MemoryType`
  --> crates/agent-mem-core/src/context_aware_search.rs:10:37
   |
10 | use crate::types::{ImportanceLevel, MemoryType};
   |                                     ^^^^^^^^^^

warning: unused import: `AgentMemError`
  --> crates/agent-mem-core/src/context_aware_search.rs:11:32
   |
11 | use agent_mem_traits::{Result, AgentMemError};
   |                                ^^^^^^^^^^^^^

warning: unused import: `BTreeMap`
  --> crates/agent-mem-core/src/context_aware_search.rs:13:33
   |
13 | use std::collections::{HashMap, BTreeMap, HashSet};
   |                                 ^^^^^^^^

warning: unused import: `Duration`
  --> crates/agent-mem-core/src/context_aware_search.rs:14:29
   |
14 | use chrono::{DateTime, Utc, Duration};
   |                             ^^^^^^^^

warning: unused import: `uuid::Uuid`
  --> crates/agent-mem-core/src/context_aware_search.rs:15:5
   |
15 | use uuid::Uuid;
   |     ^^^^^^^^^^

warning: unused import: `AgentMemError`
 --> crates/agent-mem-core/src/monitoring.rs:6:32
  |
6 | use agent_mem_traits::{Result, AgentMemError};
  |                                ^^^^^^^^^^^^^

warning: unused import: `AgentMemError`
 --> crates/agent-mem-core/src/logging.rs:6:32
  |
6 | use agent_mem_traits::{Result, AgentMemError};
  |                                ^^^^^^^^^^^^^

warning: unused variable: `level`
   --> crates/agent-mem-core/src/hierarchical_service.rs:270:18
    |
270 |             for (level, level_memories) in scope_memories.iter() {
    |                  ^^^^^ help: if this is intentional, prefix it with an underscore: `_level`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `new_memory`
   --> crates/agent-mem-core/src/hierarchical_service.rs:327:39
    |
327 | ...n resolve_conflicts(&self, new_memory: &HierarchicalMemoryRecord) -> Result<...
    |                               ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_new_memory`

warning: unused variable: `memory`
   --> crates/agent-mem-core/src/hierarchical_service.rs:334:45
    |
334 | ...y_inheritance_rules(&self, memory: &HierarchicalMemoryRecord) -> Result<()> {
    |                               ^^^^^^ help: if this is intentional, prefix it with an underscore: `_memory`

warning: unused variable: `memory_id`
   --> crates/agent-mem-core/src/hierarchical_service.rs:349:41
    |
349 |     async fn update_access_stats(&self, memory_id: &str) -> Result<()> {
    |                                         ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_memory_id`

warning: unused variable: `node_id`
   --> crates/agent-mem-core/src/hierarchy_manager.rs:424:36
    |
424 |     async fn rebalance_node(&self, node_id: &str) -> Result<()> {
    |                                    ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_node_id`

warning: unused variable: `memory`
   --> crates/agent-mem-core/src/importance_scorer.rs:210:9
    |
210 |         memory: &HierarchicalMemoryRecord,
    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_memory`

warning: unused variable: `memory`
   --> crates/agent-mem-core/src/importance_scorer.rs:344:9
    |
344 |         memory: &HierarchicalMemoryRecord,
    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_memory`

warning: unused variable: `context`
   --> crates/agent-mem-core/src/importance_scorer.rs:345:9
    |
345 |         context: &ScoringContext,
    |         ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_context`

warning: unused variable: `agent_id`
  --> crates/agent-mem-core/src/hierarchy.rs:45:33
   |
45 |             (MemoryScope::Agent(agent_id), MemoryScope::Global) => true,
   |                                 ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_agent_id`

warning: unused variable: `agent_id`
  --> crates/agent-mem-core/src/hierarchy.rs:51:34
   |
51 |             (MemoryScope::User { agent_id, user_id }, MemoryScope::Global) => true,
   |                                  ^^^^^^^^ help: try ignoring the field: `agent_id: _`

warning: unused variable: `user_id`
  --> crates/agent-mem-core/src/hierarchy.rs:51:44
   |
51 |             (MemoryScope::User { agent_id, user_id }, MemoryScope::Global) => true,
   |                                            ^^^^^^^ help: try ignoring the field: `user_id: _`

warning: unused variable: `user_id`
  --> crates/agent-mem-core/src/hierarchy.rs:52:44
   |
52 | ... { agent_id, user_id }, MemoryScope::Agent(other_agent_id)) => {
   |                 ^^^^^^^ help: try ignoring the field: `user_id: _`

warning: unused variable: `agent_id`
  --> crates/agent-mem-core/src/hierarchy.rs:60:37
   |
60 | ...::Session { agent_id, user_id, session_id }, MemoryScope::Global) => true,
   |                ^^^^^^^^ help: try ignoring the field: `agent_id: _`

warning: unused variable: `user_id`
  --> crates/agent-mem-core/src/hierarchy.rs:60:47
   |
60 | ... { agent_id, user_id, session_id }, MemoryScope::Global) => true,
   |                 ^^^^^^^ help: try ignoring the field: `user_id: _`

warning: unused variable: `session_id`
  --> crates/agent-mem-core/src/hierarchy.rs:60:56
   |
60 | ... user_id, session_id }, MemoryScope::Global) => true,
   |              ^^^^^^^^^^ help: try ignoring the field: `session_id: _`

warning: unused variable: `user_id`
  --> crates/agent-mem-core/src/hierarchy.rs:61:47
   |
61 | ... { agent_id, user_id, session_id }, MemoryScope::Agent(other_agent_id)) => {
   |                 ^^^^^^^ help: try ignoring the field: `user_id: _`

warning: unused variable: `session_id`
  --> crates/agent-mem-core/src/hierarchy.rs:61:56
   |
61 | ... user_id, session_id }, MemoryScope::Agent(other_agent_id)) => {
   |              ^^^^^^^^^^ help: try ignoring the field: `session_id: _`

warning: unused variable: `session_id`
  --> crates/agent-mem-core/src/hierarchy.rs:64:56
   |
64 | ... user_id, session_id }, MemoryScope::User { agent_id: other_agent_id, user_id...
   |              ^^^^^^^^^^ help: try ignoring the field: `session_id: _`

warning: unused variable: `memory`
   --> crates/agent-mem-core/src/hierarchical_service.rs:355:31
    |
355 |     fn matches_filters(&self, memory: &HierarchicalMemoryRecord, filters: &Hier...
    |                               ^^^^^^ help: if this is intentional, prefix it with an underscore: `_memory`

warning: unused variable: `filters`
   --> crates/agent-mem-core/src/hierarchical_service.rs:355:66
    |
355 | ...&HierarchicalMemoryRecord, filters: &HierarchicalSearchFilters) -> bool {
    |                               ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_filters`

warning: unused variable: `template_type`
   --> crates/agent-mem-core/src/llm_optimizer.rs:358:41
    |
358 | ...ied_optimizations(&self, template_type: &PromptTemplateType) -> Vec<String> {
    |                             ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_template_type`

warning: field `config` is never read
  --> crates/agent-mem-core/src/manager.rs:25:5
   |
17 | pub struct MemoryManager {
   |            ------------- field in this struct
...
25 |     config: MemoryConfig,
   |     ^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `conflict_cache` is never read
  --> crates/agent-mem-core/src/hierarchical_service.rs:99:5
   |
91 | pub struct HierarchicalMemoryService {
   |            ------------------------- field in this struct
...
99 |     conflict_cache: Arc<RwLock<HashMap<String, Vec<HierarchicalMemoryRecord>>>>,
   |     ^^^^^^^^^^^^^^

warning: field `hierarchy_service` is never read
   --> crates/agent-mem-core/src/hierarchy_manager.rs:131:5
    |
129 | pub struct HierarchyManager {
    |            ---------------- field in this struct
130 |     config: HierarchyManagerConfig,
131 |     hierarchy_service: Arc<HierarchicalMemoryService>,
    |     ^^^^^^^^^^^^^^^^^

warning: field `weight_history` is never read
   --> crates/agent-mem-core/src/importance_scorer.rs:126:5
    |
123 | pub struct AdvancedImportanceScorer {
    |            ------------------------ field in this struct
...
126 |     weight_history: Vec<ImportanceScorerConfig>,
    |     ^^^^^^^^^^^^^^

warning: fields `requests` and `config` are never read
   --> crates/agent-mem-core/src/security.rs:207:5
    |
206 | struct RateLimitTracker {
    |        ---------------- fields in this struct
207 |     requests: VecDeque<DateTime<Utc>>,
    |     ^^^^^^^^
208 |     config: RateLimitConfig,
    |     ^^^^^^
    |
    = note: `RateLimitTracker` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: `agent-mem-core` (lib) generated 53 warnings (run `cargo fix --lib -p agent-mem-core` to apply 27 suggestions)
warning: unused variable: `memory_manager`
   --> crates/agent-mem-server/src/routes/memory.rs:258:15
    |
258 |     Extension(memory_manager): Extension<Arc<MemoryManager>>,
    |               ^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_memory_manager`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `memory_manager`
  --> crates/agent-mem-server/src/routes/health.rs:27:15
   |
27 |     Extension(memory_manager): Extension<Arc<MemoryManager>>,
   |               ^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_memory_manager`

warning: `agent-mem-server` (lib) generated 2 warnings
warning: unused variable: `next_ch`
   --> crates/agent-mem-llm/src/prompts/manager.rs:175:38
    |
175 |                         if let Some(&next_ch) = chars.peek() {
    |                                      ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_next_ch`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: fields `id`, `object`, `created`, `model`, and `usage` are never read
  --> crates/agent-mem-llm/src/providers/openai.rs:36:5
   |
35 | struct OpenAIResponse {
   |        -------------- fields in this struct
36 |     id: String,
   |     ^^
37 |     object: String,
   |     ^^^^^^
38 |     created: u64,
   |     ^^^^^^^
39 |     model: String,
   |     ^^^^^
40 |     choices: Vec<OpenAIChoice>,
41 |     usage: OpenAIUsage,
   |     ^^^^^
   |
   = note: `OpenAIResponse` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis
   = note: `#[warn(dead_code)]` on by default

warning: fields `index` and `finish_reason` are never read
  --> crates/agent-mem-llm/src/providers/openai.rs:47:5
   |
46 | struct OpenAIChoice {
   |        ------------ fields in this struct
47 |     index: u32,
   |     ^^^^^
48 |     message: OpenAIMessage,
49 |     finish_reason: Option<String>,
   |     ^^^^^^^^^^^^^
   |
   = note: `OpenAIChoice` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: fields `prompt_tokens`, `completion_tokens`, and `total_tokens` are never read
  --> crates/agent-mem-llm/src/providers/openai.rs:55:5
   |
54 | struct OpenAIUsage {
   |        ----------- fields in this struct
55 |     prompt_tokens: u32,
   |     ^^^^^^^^^^^^^
56 |     completion_tokens: u32,
   |     ^^^^^^^^^^^^^^^^^
57 |     total_tokens: u32,
   |     ^^^^^^^^^^^^
   |
   = note: `OpenAIUsage` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: multiple fields are never read
  --> crates/agent-mem-llm/src/providers/anthropic.rs:33:5
   |
32 | struct AnthropicResponse {
   |        ----------------- fields in this struct
33 |     id: String,
   |     ^^
34 |     #[serde(rename = "type")]
35 |     response_type: String,
   |     ^^^^^^^^^^^^^
36 |     role: String,
   |     ^^^^
37 |     content: Vec<AnthropicContent>,
38 |     model: String,
   |     ^^^^^
39 |     stop_reason: Option<String>,
   |     ^^^^^^^^^^^
40 |     stop_sequence: Option<String>,
   |     ^^^^^^^^^^^^^
41 |     usage: AnthropicUsage,
   |     ^^^^^
   |
   = note: `AnthropicResponse` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: fields `input_tokens` and `output_tokens` are never read
  --> crates/agent-mem-llm/src/providers/anthropic.rs:55:5
   |
54 | struct AnthropicUsage {
   |        -------------- fields in this struct
55 |     input_tokens: u32,
   |     ^^^^^^^^^^^^
56 |     output_tokens: u32,
   |     ^^^^^^^^^^^^^
   |
   = note: `AnthropicUsage` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: fields `client` and `base_url` are never read
  --> crates/agent-mem-llm/src/providers/azure.rs:11:5
   |
9  | pub struct AzureProvider {
   |            ------------- fields in this struct
10 |     config: LLMConfig,
11 |     client: Client,
   |     ^^^^^^
12 |     base_url: String,
   |     ^^^^^^^^

warning: fields `client` and `base_url` are never read
  --> crates/agent-mem-llm/src/providers/gemini.rs:11:5
   |
9  | pub struct GeminiProvider {
   |            -------------- fields in this struct
10 |     config: LLMConfig,
11 |     client: Client,
   |     ^^^^^^
12 |     base_url: String,
   |     ^^^^^^^^

warning: multiple fields are never read
  --> crates/agent-mem-llm/src/providers/ollama.rs:40:5
   |
39 | struct OllamaResponse {
   |        -------------- fields in this struct
40 |     model: String,
   |     ^^^^^
41 |     created_at: String,
   |     ^^^^^^^^^^
42 |     message: OllamaMessage,
43 |     done: bool,
   |     ^^^^
44 |     #[serde(skip_serializing_if = "Option::is_none")]
45 |     total_duration: Option<u64>,
   |     ^^^^^^^^^^^^^^
46 |     #[serde(skip_serializing_if = "Option::is_none")]
47 |     load_duration: Option<u64>,
   |     ^^^^^^^^^^^^^
48 |     #[serde(skip_serializing_if = "Option::is_none")]
49 |     prompt_eval_count: Option<u32>,
   |     ^^^^^^^^^^^^^^^^^
50 |     #[serde(skip_serializing_if = "Option::is_none")]
51 |     eval_count: Option<u32>,
   |     ^^^^^^^^^^
   |
   = note: `OllamaResponse` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: fields `id`, `response_type`, `role`, `model`, `stop_reason`, and `stop_sequence` are never read
  --> crates/agent-mem-llm/src/providers/claude.rs:42:5
   |
41 | struct ClaudeResponse {
   |        -------------- fields in this struct
42 |     id: String,
   |     ^^
43 |     #[serde(rename = "type")]
44 |     response_type: String,
   |     ^^^^^^^^^^^^^
45 |     role: String,
   |     ^^^^
46 |     content: Vec<ClaudeContent>,
47 |     model: String,
   |     ^^^^^
48 |     stop_reason: Option<String>,
   |     ^^^^^^^^^^^
49 |     stop_sequence: Option<String>,
   |     ^^^^^^^^^^^^^
   |
   = note: `ClaudeResponse` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: fields `response_id`, `generation_id`, and `meta` are never read
  --> crates/agent-mem-llm/src/providers/cohere.rs:45:5
   |
44 | struct CohereResponse {
   |        -------------- fields in this struct
45 |     response_id: String,
   |     ^^^^^^^^^^^
46 |     text: String,
47 |     generation_id: String,
   |     ^^^^^^^^^^^^^
...
51 |     meta: Option<CohereMeta>,
   |     ^^^^
   |
   = note: `CohereResponse` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: field `billed_tokens` is never read
  --> crates/agent-mem-llm/src/providers/cohere.rs:60:5
   |
56 | struct CohereTokenCount {
   |        ---------------- field in this struct
...
60 |     billed_tokens: u32,
   |     ^^^^^^^^^^^^^
   |
   = note: `CohereTokenCount` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: fields `api_version` and `billed_units` are never read
  --> crates/agent-mem-llm/src/providers/cohere.rs:66:5
   |
65 | struct CohereMeta {
   |        ---------- fields in this struct
66 |     api_version: CohereApiVersion,
   |     ^^^^^^^^^^^
67 |     billed_units: CohereBilledUnits,
   |     ^^^^^^^^^^^^
   |
   = note: `CohereMeta` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: field `version` is never read
  --> crates/agent-mem-llm/src/providers/cohere.rs:73:5
   |
72 | struct CohereApiVersion {
   |        ---------------- field in this struct
73 |     version: String,
   |     ^^^^^^^
   |
   = note: `CohereApiVersion` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: fields `input_tokens` and `output_tokens` are never read
  --> crates/agent-mem-llm/src/providers/cohere.rs:79:5
   |
78 | struct CohereBilledUnits {
   |        ----------------- fields in this struct
79 |     input_tokens: u32,
   |     ^^^^^^^^^^^^
80 |     output_tokens: u32,
   |     ^^^^^^^^^^^^^
   |
   = note: `CohereBilledUnits` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: fields `id`, `object`, `created`, and `model` are never read
  --> crates/agent-mem-llm/src/providers/mistral.rs:43:5
   |
42 | struct MistralResponse {
   |        --------------- fields in this struct
43 |     id: String,
   |     ^^
44 |     object: String,
   |     ^^^^^^
45 |     created: u64,
   |     ^^^^^^^
46 |     model: String,
   |     ^^^^^
   |
   = note: `MistralResponse` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: fields `index` and `finish_reason` are never read
  --> crates/agent-mem-llm/src/providers/mistral.rs:54:5
   |
53 | struct MistralChoice {
   |        ------------- fields in this struct
54 |     index: u32,
   |     ^^^^^
55 |     message: MistralMessage,
56 |     finish_reason: String,
   |     ^^^^^^^^^^^^^
   |
   = note: `MistralChoice` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: fields `param` and `code` are never read
  --> crates/agent-mem-llm/src/providers/mistral.rs:79:5
   |
75 | struct MistralErrorDetail {
   |        ------------------ fields in this struct
...
79 |     param: Option<String>,
   |     ^^^^^
80 |     code: Option<String>,
   |     ^^^^
   |
   = note: `MistralErrorDetail` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: fields `id`, `object`, `created`, and `model` are never read
  --> crates/agent-mem-llm/src/providers/perplexity.rs:43:5
   |
42 | struct PerplexityResponse {
   |        ------------------ fields in this struct
43 |     id: String,
   |     ^^
44 |     object: String,
   |     ^^^^^^
45 |     created: u64,
   |     ^^^^^^^
46 |     model: String,
   |     ^^^^^
   |
   = note: `PerplexityResponse` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: fields `index` and `finish_reason` are never read
  --> crates/agent-mem-llm/src/providers/perplexity.rs:54:5
   |
53 | struct PerplexityChoice {
   |        ---------------- fields in this struct
54 |     index: u32,
   |     ^^^^^
55 |     message: PerplexityMessage,
56 |     finish_reason: String,
   |     ^^^^^^^^^^^^^
   |
   = note: `PerplexityChoice` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: fields `param` and `code` are never read
  --> crates/agent-mem-llm/src/providers/perplexity.rs:79:5
   |
75 | struct PerplexityErrorDetail {
   |        --------------------- fields in this struct
...
79 |     param: Option<String>,
   |     ^^^^^
80 |     code: Option<String>,
   |     ^^^^
   |
   = note: `PerplexityErrorDetail` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: unused imports: `PineconeStore` and `QdrantStore`
 --> crates/agent-mem-storage/src/factory.rs:3:55
  |
3 | use crate::backends::{MemoryVectorStore, ChromaStore, QdrantStore, PineconeStore};
  |                                                       ^^^^^^^^^^^  ^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `warn`
  --> crates/agent-mem-storage/src/backends/elasticsearch.rs:11:35
   |
11 | use tracing::{debug, error, info, warn};
   |                                   ^^^^

warning: unused imports: `MemgraphStore` and `Neo4jStore`
 --> crates/agent-mem-storage/src/graph/factory.rs:3:20
  |
3 | use crate::graph::{Neo4jStore, MemgraphStore};
  |                    ^^^^^^^^^^  ^^^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
   --> crates/agent-mem-storage/src/graph/neo4j.rs:338:13
    |
338 |         use std::collections::HashMap;
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `entities`
  --> crates/agent-mem-storage/src/graph/factory.rs:21:34
   |
21 | ...ync fn add_entities(&self, entities: &[agent_mem_traits::Entity], session: &a...
   |                               ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_entities`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `session`
  --> crates/agent-mem-storage/src/graph/factory.rs:21:73
   |
21 | ...agent_mem_traits::Entity], session: &agent_mem_traits::Session) -> Result<()> {
   |                               ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_session`

warning: unused variable: `relations`
  --> crates/agent-mem-storage/src/graph/factory.rs:32:35
   |
32 | ...nc fn add_relations(&self, relations: &[agent_mem_traits::Relation], session:...
   |                               ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_relations`

warning: unused variable: `session`
  --> crates/agent-mem-storage/src/graph/factory.rs:32:77
   |
32 | ...ent_mem_traits::Relation], session: &agent_mem_traits::Session) -> Result<()> {
   |                               ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_session`

warning: unused variable: `query`
  --> crates/agent-mem-storage/src/graph/factory.rs:43:34
   |
43 | ...async fn search_graph(&self, query: &str, session: &agent_mem_traits::Session...
   |                                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_query`

warning: unused variable: `session`
  --> crates/agent-mem-storage/src/graph/factory.rs:43:47
   |
43 | ..._graph(&self, query: &str, session: &agent_mem_traits::Session) -> Result<Vec...
   |                               ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_session`

warning: unused variable: `entity_id`
  --> crates/agent-mem-storage/src/graph/factory.rs:54:35
   |
54 | ...nc fn get_neighbors(&self, entity_id: &str, depth: usize) -> Result<Vec<agent...
   |                               ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_entity_id`

warning: unused variable: `depth`
  --> crates/agent-mem-storage/src/graph/factory.rs:54:52
   |
54 | ...bors(&self, entity_id: &str, depth: usize) -> Result<Vec<agent_mem_traits::En...
   |                                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_depth`

warning: unused variable: `entity_data`
   --> crates/agent-mem-storage/src/graph/neo4j.rs:271:29
    |
271 |                 if let Some(entity_data) = data_row.row.get(0) {
    |                             ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_entity_data`

warning: field `config` is never read
  --> crates/agent-mem-storage/src/backends/chroma.rs:37:5
   |
36 | pub struct ChromaStore {
   |            ----------- field in this struct
37 |     config: VectorStoreConfig,
   |     ^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `config` is never read
 --> crates/agent-mem-storage/src/backends/lancedb.rs:8:5
  |
7 | pub struct LanceDBStore {
  |            ------------ field in this struct
8 |     config: VectorStoreConfig,
  |     ^^^^^^

warning: field `vectors_count` is never read
  --> crates/agent-mem-storage/src/backends/qdrant.rs:77:5
   |
75 | struct QdrantCollectionResult {
   |        ---------------------- field in this struct
76 |     points_count: usize,
77 |     vectors_count: usize,
   |     ^^^^^^^^^^^^^
   |
   = note: `QdrantCollectionResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: field `dimension` is never read
  --> crates/agent-mem-storage/src/backends/pinecone.rs:71:5
   |
68 | struct PineconeStatsResponse {
   |        --------------------- field in this struct
...
71 |     dimension: usize,
   |     ^^^^^^^^^
   |
   = note: `PineconeStatsResponse` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: fields `config` and `index_name` are never read
  --> crates/agent-mem-storage/src/backends/pinecone.rs:76:5
   |
75 | pub struct PineconeStore {
   |            ------------- fields in this struct
76 |     config: VectorStoreConfig,
   |     ^^^^^^
...
80 |     index_name: String,
   |     ^^^^^^^^^^

warning: struct `WeaviateQuery` is never constructed
  --> crates/agent-mem-storage/src/backends/weaviate.rs:48:8
   |
48 | struct WeaviateQuery {
   |        ^^^^^^^^^^^^^

warning: field `id` is never read
  --> crates/agent-mem-storage/src/backends/weaviate.rs:68:5
   |
67 | struct WeaviateSearchResult {
   |        -------------------- field in this struct
68 |     id: Option<String>,
   |     ^^
   |
   = note: `WeaviateSearchResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: field `distance` is never read
  --> crates/agent-mem-storage/src/backends/weaviate.rs:80:5
   |
79 | struct WeaviateAdditional {
   |        ------------------ field in this struct
80 |     distance: Option<f32>,
   |     ^^^^^^^^
   |
   = note: `WeaviateAdditional` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: field `error` is never read
  --> crates/agent-mem-storage/src/backends/weaviate.rs:87:5
   |
86 | struct WeaviateError {
   |        ------------- field in this struct
87 |     error: Vec<WeaviateErrorDetail>,
   |     ^^^^^
   |
   = note: `WeaviateError` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: field `message` is never read
  --> crates/agent-mem-storage/src/backends/weaviate.rs:93:5
   |
92 | struct WeaviateErrorDetail {
   |        ------------------- field in this struct
93 |     message: String,
   |     ^^^^^^^
   |
   = note: `WeaviateErrorDetail` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: field `field_type` is never read
  --> crates/agent-mem-storage/src/backends/milvus.rs:88:5
   |
85 | struct MilvusFieldData {
   |        --------------- field in this struct
...
88 |     field_type: i32,
   |     ^^^^^^^^^^
   |
   = note: `MilvusFieldData` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: field `long_data` is never read
  --> crates/agent-mem-storage/src/backends/milvus.rs:96:5
   |
94 | struct MilvusScalars {
   |        ------------- field in this struct
95 |     string_data: Option<MilvusStringData>,
96 |     long_data: Option<MilvusLongData>,
   |     ^^^^^^^^^
   |
   = note: `MilvusScalars` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: field `data` is never read
   --> crates/agent-mem-storage/src/backends/milvus.rs:108:5
    |
107 | struct MilvusLongData {
    |        -------------- field in this struct
108 |     data: Vec<i64>,
    |     ^^^^
    |
    = note: `MilvusLongData` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: field `id` is never read
  --> crates/agent-mem-storage/src/backends/elasticsearch.rs:98:5
   |
96 | struct ElasticsearchHit {
   |        ---------------- field in this struct
97 |     #[serde(rename = "_id")]
98 |     id: String,
   |     ^^
   |
   = note: `ElasticsearchHit` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: field `error` is never read
   --> crates/agent-mem-storage/src/backends/elasticsearch.rs:108:5
    |
107 | struct ElasticsearchError {
    |        ------------------ field in this struct
108 |     error: ElasticsearchErrorDetail,
    |     ^^^^^
    |
    = note: `ElasticsearchError` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: fields `error_type` and `reason` are never read
   --> crates/agent-mem-storage/src/backends/elasticsearch.rs:115:5
    |
113 | struct ElasticsearchErrorDetail {
    |        ------------------------ fields in this struct
114 |     #[serde(rename = "type")]
115 |     error_type: String,
    |     ^^^^^^^^^^
116 |     reason: String,
    |     ^^^^^^
    |
    = note: `ElasticsearchErrorDetail` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: field `columns` is never read
  --> crates/agent-mem-storage/src/graph/neo4j.rs:35:5
   |
34 | struct Neo4jResult {
   |        ----------- field in this struct
35 |     columns: Vec<String>,
   |     ^^^^^^^
   |
   = note: `Neo4jResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: field `code` is never read
  --> crates/agent-mem-storage/src/graph/neo4j.rs:48:5
   |
47 | struct Neo4jError {
   |        ---------- field in this struct
48 |     code: String,
   |     ^^^^
   |
   = note: `Neo4jError` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: field `columns` is never read
  --> crates/agent-mem-storage/src/graph/memgraph.rs:35:5
   |
34 | struct MemgraphResult {
   |        -------------- field in this struct
35 |     columns: Vec<String>,
   |     ^^^^^^^
   |
   = note: `MemgraphResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: field `code` is never read
  --> crates/agent-mem-storage/src/graph/memgraph.rs:48:5
   |
47 | struct MemgraphError {
   |        ------------- field in this struct
48 |     code: String,
   |     ^^^^
   |
   = note: `MemgraphError` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: field `config` is never read
  --> crates/agent-mem-storage/src/graph/memgraph.rs:54:5
   |
53 | pub struct MemgraphStore {
   |            ------------- field in this struct
54 |     config: GraphStoreConfig,
   |     ^^^^^^

warning: `agent-mem-llm` (lib) generated 21 warnings
warning: `agent-mem-storage` (lib) generated 34 warnings (run `cargo fix --lib -p agent-mem-storage` to apply 4 suggestions)
warning: unused import: `std::time::Duration`
  --> crates/agent-mem-client/src/client.rs:11:5
   |
11 | use std::time::Duration;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: variable `last_error` is assigned to, but never used
  --> crates/agent-mem-client/src/retry.rs:99:17
   |
99 |         let mut last_error = None;
   |                 ^^^^^^^^^^
   |
   = note: consider using `_last_error` instead
   = note: `#[warn(unused_variables)]` on by default

warning: value assigned to `last_error` is never read
   --> crates/agent-mem-client/src/retry.rs:112:21
    |
112 |                     last_error = Some(error.to_string());
    |                     ^^^^^^^^^^
    |
    = help: maybe it is overwritten before being read?
    = note: `#[warn(unused_assignments)]` on by default

warning: unused import: `timeout`
  --> crates/agent-mem-performance/src/batch.rs:13:29
   |
13 | use tokio::time::{interval, timeout};
   |                             ^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `error` and `warn`
  --> crates/agent-mem-performance/src/batch.rs:14:22
   |
14 | use tracing::{debug, error, info, warn};
   |                      ^^^^^        ^^^^

warning: unused import: `AgentMemError`
 --> crates/agent-mem-performance/src/cache.rs:6:32
  |
6 | use agent_mem_traits::{Result, AgentMemError};
  |                                ^^^^^^^^^^^^^

warning: unused import: `std::hash::Hash`
  --> crates/agent-mem-performance/src/cache.rs:12:5
   |
12 | use std::hash::Hash;
   |     ^^^^^^^^^^^^^^^

warning: unused import: `sleep`
  --> crates/agent-mem-performance/src/cache.rs:17:29
   |
17 | use tokio::time::{interval, sleep};
   |                             ^^^^^

warning: unused import: `warn`
  --> crates/agent-mem-performance/src/cache.rs:18:28
   |
18 | use tracing::{debug, info, warn};
   |                            ^^^^

warning: unused import: `AgentMemError`
 --> crates/agent-mem-performance/src/pool.rs:6:32
  |
6 | use agent_mem_traits::{Result, AgentMemError};
  |                                ^^^^^^^^^^^^^

warning: unused import: `Mutex`
 --> crates/agent-mem-performance/src/pool.rs:9:19
  |
9 | use parking_lot::{Mutex, RwLock};
  |                   ^^^^^

warning: unused import: `std::collections::VecDeque`
  --> crates/agent-mem-performance/src/pool.rs:11:5
   |
11 | use std::collections::VecDeque;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `debug` and `warn`
  --> crates/agent-mem-performance/src/pool.rs:15:15
   |
15 | use tracing::{debug, info, warn};
   |               ^^^^^        ^^^^

warning: unused import: `AgentMemError`
 --> crates/agent-mem-performance/src/metrics.rs:6:32
  |
6 | use agent_mem_traits::{Result, AgentMemError};
  |                                ^^^^^^^^^^^^^

warning: unused imports: `counter`, `gauge`, `histogram`, `register_counter`, `register_gauge`, and `register_histogram`
  --> crates/agent-mem-performance/src/metrics.rs:15:15
   |
15 | ...::{counter, gauge, histogram, register_counter, register_gauge, register_histogram};
   |       ^^^^^^^  ^^^^^  ^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^

warning: unused import: `interval`
  --> crates/agent-mem-performance/src/concurrency.rs:12:19
   |
12 | use tokio::time::{interval, sleep};
   |                   ^^^^^^^^

warning: unused imports: `debug` and `warn`
  --> crates/agent-mem-performance/src/concurrency.rs:13:15
   |
13 | use tracing::{debug, info, warn};
   |               ^^^^^        ^^^^

warning: unused import: `AgentMemError`
 --> crates/agent-mem-performance/src/query.rs:6:32
  |
6 | use agent_mem_traits::{Result, AgentMemError};
  |                                ^^^^^^^^^^^^^

warning: unused import: `warn`
  --> crates/agent-mem-performance/src/query.rs:12:28
   |
12 | use tracing::{debug, info, warn};
   |                            ^^^^

warning: unused import: `AgentMemError`
  --> crates/agent-mem-performance/src/lib.rs:25:32
   |
25 | use agent_mem_traits::{Result, AgentMemError};
   |                                ^^^^^^^^^^^^^

warning: unused import: `tokio::sync::RwLock`
  --> crates/agent-mem-performance/src/lib.rs:27:5
   |
27 | use tokio::sync::RwLock;
   |     ^^^^^^^^^^^^^^^^^^^

warning: unused variable: `ttl`
   --> crates/agent-mem-performance/src/cache.rs:222:68
    |
222 | ...>, ttl: Option<Duration>) -> Result<()> {
    |       ^^^ help: if this is intentional, prefix it with an underscore: `_ttl`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `access_time`
   --> crates/agent-mem-performance/src/cache.rs:407:39
    |
407 |     async fn update_stats_miss(&self, access_time: Duration) {
    |                                       ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_access_time`

warning: unused variable: `optimization_time`
   --> crates/agent-mem-performance/src/query.rs:341:69
    |
341 | ...ring, plan: QueryPlan, optimization_time: Duration) {
    |                           ^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_optimization_time`

warning: unused variable: `output`
   --> crates/agent-mem-performance/src/batch.rs:202:16
    |
202 |             Ok(output) => {
    |                ^^^^^^ help: if this is intentional, prefix it with an underscore: `_output`

warning: variable does not need to be mutable
   --> crates/agent-mem-performance/src/pool.rs:367:19
    |
367 |     pub fn freeze(mut self) -> Bytes {
    |                   ----^^^^
    |                   |
    |                   help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused variable: `query`
   --> crates/agent-mem-performance/src/query.rs:261:35
    |
261 |     fn create_default_plan(&self, query: &QueryRequest) -> QueryPlan {
    |                                   ^^^^^ help: if this is intentional, prefix it with an underscore: `_query`

warning: field `config` is never read
  --> crates/agent-mem-performance/src/lib.rs:61:5
   |
60 | pub struct PerformanceManager {
   |            ------------------ field in this struct
61 |     config: PerformanceConfig,
   |     ^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: fields `config` and `semaphore` are never read
  --> crates/agent-mem-performance/src/batch.rs:94:5
   |
93 | pub struct BatchProcessor {
   |            -------------- fields in this struct
94 |     config: BatchConfig,
   |     ^^^^^^
...
97 |     semaphore: Arc<Semaphore>,
   |     ^^^^^^^^^

warning: field `size` is never read
   --> crates/agent-mem-performance/src/cache.rs:109:5
    |
103 | struct CacheEntry<V> {
    |        ---------- field in this struct
...
109 |     size: usize,
    |     ^^^^
    |
    = note: `CacheEntry` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: fields `created_at`, `hit_count`, and `average_execution_time_ms` are never read
  --> crates/agent-mem-performance/src/query.rs:75:5
   |
73 | struct CachedQueryPlan {
   |        --------------- fields in this struct
74 |     plan: QueryPlan,
75 |     created_at: Instant,
   |     ^^^^^^^^^^
76 |     hit_count: u64,
   |     ^^^^^^^^^
77 |     average_execution_time_ms: f64,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `CachedQueryPlan` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: calls to `std::mem::drop` with a reference instead of an owned value does nothing
   --> crates/agent-mem-performance/src/batch.rs:178:9
    |
178 |         drop(&self.sender);
    |         ^^^^^------------^
    |              |
    |              argument has type `&UnboundedSender<BatchRequest>`
    |
    = note: `#[warn(dropping_references)]` on by default
help: use `let _ = ...` to ignore the expression or result
    |
178 -         drop(&self.sender);
178 +         let _ = &self.sender;
    |

warning: unused imports: `AnthropicEmbedder`, `CohereEmbedder`, `HuggingFaceEmbedder`, and `LocalEmbedder`
 --> crates/agent-mem-embeddings/src/factory.rs:4:40
  |
4 | ...er, HuggingFaceEmbedder, LocalEmbedder, AnthropicEmbedder, CohereEmbedder};
  |        ^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: fields `model` and `usage` are never read
  --> crates/agent-mem-embeddings/src/providers/openai.rs:24:5
   |
22 | struct OpenAIEmbeddingResponse {
   |        ----------------------- fields in this struct
23 |     data: Vec<OpenAIEmbeddingData>,
24 |     model: String,
   |     ^^^^^
25 |     usage: OpenAIUsage,
   |     ^^^^^
   |
   = note: `OpenAIEmbeddingResponse` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis
   = note: `#[warn(dead_code)]` on by default

warning: field `object` is never read
  --> crates/agent-mem-embeddings/src/providers/openai.rs:33:5
   |
30 | struct OpenAIEmbeddingData {
   |        ------------------- field in this struct
...
33 |     object: String,
   |     ^^^^^^
   |
   = note: `OpenAIEmbeddingData` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: fields `prompt_tokens` and `total_tokens` are never read
  --> crates/agent-mem-embeddings/src/providers/openai.rs:39:5
   |
38 | struct OpenAIUsage {
   |        ----------- fields in this struct
39 |     prompt_tokens: u32,
   |     ^^^^^^^^^^^^^
40 |     total_tokens: u32,
   |     ^^^^^^^^^^^^
   |
   = note: `OpenAIUsage` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: method `load_model` is never used
  --> crates/agent-mem-embeddings/src/providers/local.rs:36:14
   |
15 | impl LocalEmbedder {
   | ------------------ method in this implementation
...
36 |     async fn load_model(&self) -> Result<()> {
   |              ^^^^^^^^^^

warning: struct `AnthropicEmbeddingRequest` is never constructed
  --> crates/agent-mem-embeddings/src/providers/anthropic.rs:13:8
   |
13 | struct AnthropicEmbeddingRequest {
   |        ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: fields `data`, `model`, and `usage` are never read
  --> crates/agent-mem-embeddings/src/providers/anthropic.rs:21:5
   |
20 | struct AnthropicEmbeddingResponse {
   |        -------------------------- fields in this struct
21 |     data: Vec<AnthropicEmbeddingData>,
   |     ^^^^
22 |     model: String,
   |     ^^^^^
23 |     usage: AnthropicUsage,
   |     ^^^^^
   |
   = note: `AnthropicEmbeddingResponse` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: fields `embedding` and `index` are never read
  --> crates/agent-mem-embeddings/src/providers/anthropic.rs:29:5
   |
28 | struct AnthropicEmbeddingData {
   |        ---------------------- fields in this struct
29 |     embedding: Vec<f32>,
   |     ^^^^^^^^^
30 |     index: usize,
   |     ^^^^^
   |
   = note: `AnthropicEmbeddingData` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: fields `prompt_tokens` and `total_tokens` are never read
  --> crates/agent-mem-embeddings/src/providers/anthropic.rs:36:5
   |
35 | struct AnthropicUsage {
   |        -------------- fields in this struct
36 |     prompt_tokens: u32,
   |     ^^^^^^^^^^^^^
37 |     total_tokens: u32,
   |     ^^^^^^^^^^^^
   |
   = note: `AnthropicUsage` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: fields `client` and `api_key` are never read
  --> crates/agent-mem-embeddings/src/providers/anthropic.rs:43:5
   |
41 | pub struct AnthropicEmbedder {
   |            ----------------- fields in this struct
42 |     config: EmbeddingConfig,
43 |     client: Client,
   |     ^^^^^^
44 |     api_key: String,
   |     ^^^^^^^

warning: fields `id` and `meta` are never read
  --> crates/agent-mem-embeddings/src/providers/cohere.rs:23:5
   |
21 | struct CohereEmbeddingResponse {
   |        ----------------------- fields in this struct
22 |     embeddings: Vec<Vec<f32>>,
23 |     id: String,
   |     ^^
24 |     meta: CohereMeta,
   |     ^^^^
   |
   = note: `CohereEmbeddingResponse` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: fields `api_version` and `billed_units` are never read
  --> crates/agent-mem-embeddings/src/providers/cohere.rs:30:5
   |
29 | struct CohereMeta {
   |        ---------- fields in this struct
30 |     api_version: CohereApiVersion,
   |     ^^^^^^^^^^^
31 |     billed_units: CohereBilledUnits,
   |     ^^^^^^^^^^^^
   |
   = note: `CohereMeta` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: field `version` is never read
  --> crates/agent-mem-embeddings/src/providers/cohere.rs:37:5
   |
36 | struct CohereApiVersion {
   |        ---------------- field in this struct
37 |     version: String,
   |     ^^^^^^^
   |
   = note: `CohereApiVersion` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: field `input_tokens` is never read
  --> crates/agent-mem-embeddings/src/providers/cohere.rs:43:5
   |
42 | struct CohereBilledUnits {
   |        ----------------- field in this struct
43 |     input_tokens: u32,
   |     ^^^^^^^^^^^^
   |
   = note: `CohereBilledUnits` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: unused import: `AgentMemError`
 --> crates/agent-mem-intelligence/src/similarity/textual.rs:3:32
  |
3 | use agent_mem_traits::{Result, AgentMemError};
  |                                ^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `jaccard_similarity`
 --> crates/agent-mem-intelligence/src/similarity/textual.rs:4:47
  |
4 | use agent_mem_utils::text::{extract_keywords, jaccard_similarity};
  |                                               ^^^^^^^^^^^^^^^^^^

warning: unused import: `HashMap`
 --> crates/agent-mem-intelligence/src/similarity/textual.rs:6:24
  |
6 | use std::collections::{HashMap, HashSet};
  |                        ^^^^^^^

warning: unused import: `ClusteringUtils`
 --> crates/agent-mem-intelligence/src/clustering/hierarchical.rs:3:82
  |
3 | ...ringConfig, ClusteringMetrics, ClusteringUtils};
  |                                   ^^^^^^^^^^^^^^^

warning: unused import: `AgentMemError`
 --> crates/agent-mem-intelligence/src/clustering/hierarchical.rs:4:32
  |
4 | use agent_mem_traits::{Result, AgentMemError};
  |                                ^^^^^^^^^^^^^

warning: unused import: `ClusteringUtils`
 --> crates/agent-mem-intelligence/src/clustering/dbscan.rs:3:82
  |
3 | ...ringConfig, ClusteringMetrics, ClusteringUtils};
  |                                   ^^^^^^^^^^^^^^^

warning: unused import: `AgentMemError`
 --> crates/agent-mem-intelligence/src/clustering/dbscan.rs:4:32
  |
4 | use agent_mem_traits::{Result, AgentMemError};
  |                                ^^^^^^^^^^^^^

warning: unused import: `async_trait::async_trait`
  --> crates/agent-mem-intelligence/src/clustering/mod.rs:14:5
   |
14 | use async_trait::async_trait;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `AgentMemError`
 --> crates/agent-mem-intelligence/src/processing/consolidation.rs:7:32
  |
7 | use agent_mem_traits::{Result, AgentMemError};
  |                                ^^^^^^^^^^^^^

warning: unused import: `AgentMemError`
 --> crates/agent-mem-intelligence/src/processing/importance.rs:7:32
  |
7 | use agent_mem_traits::{Result, AgentMemError};
  |                                ^^^^^^^^^^^^^

warning: unused import: `debug`
  --> crates/agent-mem-intelligence/src/processing/importance.rs:10:15
   |
10 | use tracing::{debug, info};
   |               ^^^^^

warning: unused import: `AgentMemError`
 --> crates/agent-mem-intelligence/src/processing/adaptive.rs:7:32
  |
7 | use agent_mem_traits::{Result, AgentMemError};
  |                                ^^^^^^^^^^^^^

warning: unused import: `MemoryType`
  --> crates/agent-mem-intelligence/src/processing/mod.rs:14:30
   |
14 | use agent_mem_core::{Memory, MemoryType};
   |                              ^^^^^^^^^^

warning: unused import: `AgentMemError`
  --> crates/agent-mem-intelligence/src/processing/mod.rs:15:32
   |
15 | use agent_mem_traits::{Result, AgentMemError};
   |                                ^^^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
  --> crates/agent-mem-intelligence/src/processing/mod.rs:17:5
   |
17 | use std::collections::HashMap;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `dimension`
  --> crates/agent-mem-intelligence/src/clustering/kmeans.rs:38:13
   |
38 |         let dimension = vectors[0].len();
   |             ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_dimension`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `memory_vectors`
  --> crates/agent-mem-intelligence/src/clustering/hierarchical.rs:18:9
   |
18 |         memory_vectors: &[Vec<f32>],
   |         ^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_memory_vectors`

warning: unused variable: `memory_ids`
  --> crates/agent-mem-intelligence/src/clustering/hierarchical.rs:19:9
   |
19 |         memory_ids: &[String],
   |         ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_memory_ids`

warning: unused variable: `config`
  --> crates/agent-mem-intelligence/src/clustering/hierarchical.rs:20:9
   |
20 |         config: &ClusteringConfig,
   |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_config`

warning: unused variable: `memory_vectors`
  --> crates/agent-mem-intelligence/src/clustering/dbscan.rs:18:9
   |
18 |         memory_vectors: &[Vec<f32>],
   |         ^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_memory_vectors`

warning: unused variable: `memory_ids`
  --> crates/agent-mem-intelligence/src/clustering/dbscan.rs:19:9
   |
19 |         memory_ids: &[String],
   |         ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_memory_ids`

warning: unused variable: `config`
  --> crates/agent-mem-intelligence/src/clustering/dbscan.rs:20:9
   |
20 |         config: &ClusteringConfig,
   |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_config`

warning: unused variable: `vectors`
   --> crates/agent-mem-intelligence/src/clustering/mod.rs:212:9
    |
212 |         vectors: &[Vec<f32>],
    |         ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_vectors`

warning: unused import: `sleep`
  --> crates/agent-mem-distributed/src/cluster.rs:13:29
   |
13 | use tokio::time::{interval, sleep};
   |                             ^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `error`
  --> crates/agent-mem-distributed/src/cluster.rs:14:34
   |
14 | use tracing::{debug, info, warn, error};
   |                                  ^^^^^

warning: unused import: `debug`
  --> crates/agent-mem-distributed/src/sharding.rs:12:15
   |
12 | use tracing::{debug, info, warn};
   |               ^^^^^

warning: unused import: `warn`
  --> crates/agent-mem-distributed/src/consensus.rs:13:28
   |
13 | use tracing::{debug, info, warn};
   |                            ^^^^

warning: unused import: `AgentMemError`
 --> crates/agent-mem-distributed/src/discovery.rs:3:32
  |
3 | use agent_mem_traits::{Result, AgentMemError};
  |                                ^^^^^^^^^^^^^

warning: unused import: `warn`
 --> crates/agent-mem-distributed/src/discovery.rs:9:21
  |
9 | use tracing::{info, warn};
  |                     ^^^^

warning: unused import: `AgentMemError`
 --> crates/agent-mem-distributed/src/coordination.rs:3:32
  |
3 | use agent_mem_traits::{Result, AgentMemError};
  |                                ^^^^^^^^^^^^^

warning: unused import: `AgentMemError`
 --> crates/agent-mem-distributed/src/replication.rs:3:32
  |
3 | use agent_mem_traits::{Result, AgentMemError};
  |                                ^^^^^^^^^^^^^

warning: unused import: `AgentMemError`
 --> crates/agent-mem-distributed/src/load_balancer.rs:3:32
  |
3 | use agent_mem_traits::{Result, AgentMemError};
  |                                ^^^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
 --> crates/agent-mem-distributed/src/load_balancer.rs:5:5
  |
5 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `AgentMemError`
  --> crates/agent-mem-distributed/src/lib.rs:27:32
   |
27 | use agent_mem_traits::{Result, AgentMemError};
   |                                ^^^^^^^^^^^^^

warning: unused import: `std::net::SocketAddr`
  --> crates/agent-mem-distributed/src/lib.rs:30:5
   |
30 | use std::net::SocketAddr;
   |     ^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `nodes`
   --> crates/agent-mem-distributed/src/cluster.rs:233:13
    |
233 |         let nodes = Arc::clone(&self.nodes);
    |             ^^^^^ help: if this is intentional, prefix it with an underscore: `_nodes`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: variable does not need to be mutable
   --> crates/agent-mem-distributed/src/cluster.rs:266:21
    |
266 |         if let Some(mut node) = nodes.get_mut(&node_id) {
    |                     ----^^^^
    |                     |
    |                     help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused variable: `data`
  --> crates/agent-mem-distributed/src/replication.rs:53:51
   |
53 | ...icate_data(&self, key: &str, data: &[u8], nodes: &[Uuid]) -> Result<()> {
   |                                 ^^^^ help: if this is intentional, prefix it with an underscore: `_data`

warning: field `last_applied` is never read
  --> crates/agent-mem-distributed/src/consensus.rs:66:5
   |
58 | pub struct ConsensusManager {
   |            ---------------- field in this struct
...
66 |     last_applied: Arc<RwLock<u64>>,
   |     ^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: fields `node_id`, `next_index`, `match_index`, and `last_heartbeat` are never read
  --> crates/agent-mem-distributed/src/consensus.rs:74:5
   |
73 | struct PeerInfo {
   |        -------- fields in this struct
74 |     node_id: Uuid,
   |     ^^^^^^^
75 |     next_index: u64,
   |     ^^^^^^^^^^
76 |     match_index: u64,
   |     ^^^^^^^^^^^
77 |     last_heartbeat: Instant,
   |     ^^^^^^^^^^^^^^
   |
   = note: `PeerInfo` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: field `config` is never read
  --> crates/agent-mem-distributed/src/discovery.rs:38:5
   |
37 | pub struct ServiceDiscovery {
   |            ---------------- field in this struct
38 |     config: DiscoveryConfig,
   |     ^^^^^^

warning: field `config` is never read
  --> crates/agent-mem-distributed/src/coordination.rs:27:5
   |
26 | pub struct CoordinationManager {
   |            ------------------- field in this struct
27 |     config: CoordinationConfig,
   |     ^^^^^^

warning: fields `config` and `replicas` are never read
  --> crates/agent-mem-distributed/src/replication.rs:36:5
   |
35 | pub struct ReplicationManager {
   |            ------------------ fields in this struct
36 |     config: ReplicationConfig,
   |     ^^^^^^
37 |     replicas: Arc<RwLock<HashMap<String, Vec<Uuid>>>>,
   |     ^^^^^^^^

warning: unused variable: `metadata`
   --> examples/phase3-demo/src/main.rs:161:17
    |
161 |             let metadata = HashMap::from([
    |                 ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_metadata`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `embedding`
   --> examples/phase3-demo/src/main.rs:165:17
    |
165 |             let embedding = vec![0.1, 0.2, 0.3, 0.4, 0.5]; // Demo embedding
    |                 ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_embedding`

warning: unused variable: `metadata`
   --> examples/phase3-demo/src/main.rs:189:17
    |
189 |             let metadata = HashMap::from([
    |                 ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_metadata`

warning: unused variable: `embedding`
   --> examples/phase3-demo/src/main.rs:193:17
    |
193 |             let embedding = vec![0.9, 0.8, 0.7, 0.6, 0.5]; // Demo embedding
    |                 ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_embedding`

warning: unused variable: `metadata`
   --> examples/phase3-demo/src/main.rs:217:17
    |
217 |             let metadata = HashMap::from([
    |                 ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_metadata`

warning: unused variable: `embedding`
   --> examples/phase3-demo/src/main.rs:221:17
    |
221 |             let embedding = vec![0.5, 0.6, 0.7, 0.8, 0.9]; // Demo embedding
    |                 ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_embedding`

warning: unused import: `error`
  --> crates/agent-mem-distributed/src/cluster.rs:14:34
   |
14 | use tracing::{debug, info, warn, error};
   |                                  ^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused variable: `node_shards`
   --> crates/agent-mem-distributed/src/sharding.rs:479:13
    |
479 |         let node_shards = manager.get_node_shards(node_id).await.unwrap();
    |             ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_node_shards`

warning: `agent-mem-client` (lib) generated 3 warnings (run `cargo fix --lib -p agent-mem-client` to apply 1 suggestion)
warning: `agent-mem-performance` (lib) generated 29 warnings (run `cargo fix --lib -p agent-mem-performance` to apply 19 suggestions)
warning: `agent-mem-embeddings` (lib) generated 14 warnings (run `cargo fix --lib -p agent-mem-embeddings` to apply 1 suggestion)
warning: `agent-mem-intelligence` (lib) generated 23 warnings (run `cargo fix --lib -p agent-mem-intelligence` to apply 15 suggestions)
warning: `agent-mem-distributed` (lib) generated 20 warnings (run `cargo fix --lib -p agent-mem-distributed` to apply 13 suggestions)
warning: `phase3-demo` (bin "phase3-demo" test) generated 6 warnings
warning: `agent-mem-performance` (lib test) generated 29 warnings (29 duplicates)
warning: `agent-mem-distributed` (lib test) generated 20 warnings (18 duplicates) (run `cargo fix --lib -p agent-mem-distributed --tests` to apply 1 suggestion)
warning: unused variable: `text2`
   --> crates/agent-mem-intelligence/src/similarity/hybrid.rs:400:13
    |
400 |         let text2 = "world";
    |             ^^^^^ help: if this is intentional, prefix it with an underscore: `_text2`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `dimension`
  --> crates/agent-mem-intelligence/src/clustering/kmeans.rs:38:13
   |
38 |         let dimension = vectors[0].len();
   |             ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_dimension`

warning: variable does not need to be mutable
   --> crates/agent-mem-intelligence/src/processing/importance.rs:390:13
    |
390 |         let mut scorer = ImportanceScorer::new(0.95);
    |             ----^^^^^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused variable: `archived`
   --> crates/agent-mem-intelligence/src/processing/adaptive.rs:461:14
    |
461 |         let (archived, deleted) = manager.manage_memories(&mut memories).await....
    |              ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_archived`

warning: comparison is useless due to type limits
   --> crates/agent-mem-intelligence/src/processing/consolidation.rs:372:17
    |
372 |         assert!(groups.len() >= 0);
    |                 ^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(unused_comparisons)]` on by default

warning: comparison is useless due to type limits
   --> crates/agent-mem-intelligence/src/processing/mod.rs:226:17
    |
226 |         assert!(stats.processing_time_ms >= 0);
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
  --> examples/client-demo/src/main.rs:10:5
   |
10 | use std::collections::HashMap;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

   Compiling phase4-demo v2.0.0 (/Users/louloulin/Documents/linchong/cjproject/contextengine/agentmen/examples/phase4-demo)
warning: unused variable: `config_file`
  --> crates/agent-mem-server/src/main.rs:49:34
   |
49 |     let mut config = if let Some(config_file) = cli.config {
   |                                  ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_config_file`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused import: `tokio_test`
  --> crates/agent-mem-server/src/server.rs:84:9
   |
84 |     use tokio_test;
   |         ^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `tower_test::mock`
   --> crates/agent-mem-server/src/routes/mod.rs:106:9
    |
106 |     use tower_test::mock;
    |         ^^^^^^^^^^^^^^^^

warning: unused import: `super::*`
  --> crates/agent-mem-server/src/middleware.rs:58:9
   |
58 |     use super::*;
   |         ^^^^^^^^

warning: unused import: `tokio_test`
  --> crates/agent-mem-server/src/lib.rs:29:9
   |
29 |     use tokio_test;
   |         ^^^^^^^^^^

warning: unused import: `agent_mem_traits::MessageRole`
   --> crates/agent-mem-llm/src/client.rs:196:9
    |
196 |     use agent_mem_traits::MessageRole;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(unused_imports)]` on by default

warning: `agent-mem-intelligence` (lib test) generated 26 warnings (20 duplicates) (run `cargo fix --lib -p agent-mem-intelligence --tests` to apply 1 suggestion)
warning: `client-demo` (bin "client-demo" test) generated 1 warning (run `cargo fix --bin "client-demo" --tests` to apply 1 suggestion)
warning: `agent-mem-server` (bin "agent-mem-server" test) generated 1 warning
warning: `agent-mem-server` (lib test) generated 6 warnings (2 duplicates) (run `cargo fix --lib -p agent-mem-server --tests` to apply 4 suggestions)
warning: `agent-mem-llm` (lib test) generated 22 warnings (21 duplicates) (run `cargo fix --lib -p agent-mem-llm --tests` to apply 1 suggestion)
warning: unused variable: `providers`
   --> crates/agent-mem-storage/src/graph/factory.rs:164:13
    |
164 |         let providers = GraphStoreFactory::supported_providers();
    |             ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_providers`

warning: unused variable: `result`
   --> crates/agent-mem-storage/src/graph/memgraph.rs:380:13
    |
380 |         let result = MemgraphStore::new(config).await;
    |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_result`

warning: field `config` is never read
  --> crates/agent-mem-storage/src/backends/pinecone.rs:76:5
   |
75 | pub struct PineconeStore {
   |            ------------- field in this struct
76 |     config: VectorStoreConfig,
   |     ^^^^^^

warning: unused variable: `result`
   --> crates/agent-mem-embeddings/src/providers/cohere.rs:197:13
    |
197 |         let result = rt.block_on(CohereEmbedder::new(config));
    |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_result`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: field `api_version` is never read
  --> crates/agent-mem-embeddings/src/providers/cohere.rs:30:5
   |
29 | struct CohereMeta {
   |        ---------- field in this struct
30 |     api_version: CohereApiVersion,
   |     ^^^^^^^^^^^
   |
   = note: `CohereMeta` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: unused import: `chrono::Utc`
   --> crates/agent-mem-core/src/hierarchy.rs:383:9
    |
383 |     use chrono::Utc;
    |         ^^^^^^^^^^^

warning: unused imports: `MemoryProvider` and `Message`
  --> crates/agent-mem-core/src/lib.rs:77:37
   |
77 |     use agent_mem_traits::{Session, Message, MemoryProvider};
   |                                     ^^^^^^^  ^^^^^^^^^^^^^^

warning: unused import: `tokio_test`
  --> crates/agent-mem-core/src/lib.rs:78:9
   |
78 |     use tokio_test;
   |         ^^^^^^^^^^

warning: variable does not need to be mutable
   --> crates/agent-mem-core/src/hierarchy_manager.rs:515:13
    |
515 | ...   let mut root = HierarchyNode::new(MemoryScope::Global, MemoryLevel::Strat...
    |           ----^^^^
    |           |
    |           help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused variable: `manager`
  --> crates/agent-mem-core/src/lib.rs:82:13
   |
82 |         let manager = MemoryManager::new();
   |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_manager`

warning: unused variable: `session`
  --> crates/agent-mem-core/src/lib.rs:89:13
   |
89 |         let session = Session::new()
   |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_session`

warning: unused import: `serde_json::json`
  --> crates/agent-mem-utils/src/json.rs:85:9
   |
85 |     use serde_json::json;
   |         ^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: `agent-mem-client` (lib test) generated 3 warnings (3 duplicates)
warning: `agent-mem-server` (bin "agent-mem-server") generated 1 warning (1 duplicate)
warning: `agent-mem-storage` (lib test) generated 36 warnings (33 duplicates)
warning: `agent-mem-embeddings` (lib test) generated 13 warnings (11 duplicates)
warning: `agent-mem-core` (lib test) generated 56 warnings (50 duplicates) (run `cargo fix --lib -p agent-mem-core --tests` to apply 4 suggestions)
warning: `agent-mem-config` (lib test) generated 2 warnings (2 duplicates)
warning: `agent-mem-utils` (lib test) generated 1 warning (run `cargo fix --lib -p agent-mem-utils --tests` to apply 1 suggestion)
warning: unused import: `error`
  --> examples/phase4-demo/src/main.rs:27:27
   |
27 | use tracing::{info, warn, error};
   |                           ^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused variable: `task`
   --> examples/phase4-demo/src/main.rs:137:13
    |
137 |         let task = DemoTask {
    |             ^^^^ help: if this is intentional, prefix it with an underscore: `_task`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: `phase4-demo` (bin "performance_demo" test) generated 2 warnings (run `cargo fix --bin "performance_demo" --tests` to apply 1 suggestion)
    Finished `test` profile [unoptimized + debuginfo] target(s) in 0.93s
     Running unittests src/lib.rs (target/debug/deps/agent_mem_client-8326082504391028)

running 15 tests
test error::tests::test_error_retryable ... ok
test error::tests::test_status_code ... ok
test config::tests::test_config_with_auth ... ok
test models::tests::test_search_request_builder ... ok
test models::tests::test_add_memory_request_builder ... ok
test config::tests::test_config_creation ... ok
test config::tests::test_config_validation ... ok
test retry::tests::test_retry_success_on_first_attempt ... ok
test retry::tests::test_non_retryable_error ... ok
test client::tests::test_async_client_creation ... ok
test tests::test_client_creation ... ok
test client::tests::test_url_building ... ok
test client::tests::test_sync_client_creation ... ok
test retry::tests::test_retry_exhausted ... ok
test retry::tests::test_retry_success_after_failures ... ok

test result: ok. 15 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 1.40s

     Running unittests src/lib.rs (target/debug/deps/agent_mem_config-e8e325cc699e3109)

running 8 tests
test factory::tests::test_create_llm_config ... ok
test factory::tests::test_create_memory_config ... ok
test factory::tests::test_create_vector_store_config ... ok
test validation::tests::test_validate_llm_config ... ok
test validation::tests::test_validate_embedder_config ... ok
test validation::tests::test_validate_storage_config ... ok
test factory::tests::test_save_to_file ... ok
test factory::tests::test_from_file ... ok

test result: ok. 8 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/lib.rs (target/debug/deps/agent_mem_core-1195c52b29838d04)

running 44 tests
test adaptive_strategy::tests::test_strategy_parameters ... ok
test hierarchy::tests::test_hierarchical_memory_manager ... ok
test hierarchy::tests::test_memory_inheritance ... ok
test hierarchy::tests::test_memory_scope_access ... ok
test context_aware_search::tests::test_context_aware_search_engine_creation ... ok
test hierarchy_manager::tests::test_hierarchy_node_creation ... ok
test adaptive_strategy::tests::test_adaptive_strategy_manager_creation ... ok
test adaptive_strategy::tests::test_performance_recording ... ok
test context_aware_search::tests::test_fuzzy_search ... ok
test conflict_resolver::tests::test_conflict_detection ... ok
test context_aware_search::tests::test_exact_search ... ok
test hierarchical_service::tests::test_hierarchical_service_creation ... ok
test importance_scorer::tests::test_importance_calculation ... ok
test hierarchical_service::tests::test_add_hierarchical_memory ... ok
test hierarchical_service::tests::test_memory_access_control ... ok
test hierarchy_manager::tests::test_node_depth_calculation ... ok
test conflict_resolver::tests::test_importance_based_resolution ... ok
test context_aware_search::tests::test_contextual_search ... ok
test adaptive_strategy::tests::test_strategy_recommendation ... ok
test importance_scorer::tests::test_importance_scorer_creation ... ok
test hierarchy_manager::tests::test_hierarchy_manager_creation ... ok
test importance_scorer::tests::test_usage_stats_update ... ok
test llm_optimizer::tests::test_caching ... ok
test llm_optimizer::tests::test_llm_optimizer_creation ... ok
test llm_optimizer::tests::test_optimize_request ... ok
test logging::tests::test_audit_logging ... ok
test logging::tests::test_logging_system_creation ... ok
test logging::tests::test_risk_score_calculation ... ok
test logging::tests::test_security_logging ... ok
test monitoring::tests::test_alert_rules ... ok
test monitoring::tests::test_health_checks ... ok
test monitoring::tests::test_metric_recording ... ok
test monitoring::tests::test_monitoring_system_creation ... ok
test security::tests::test_user_authentication ... ok
test tests::test_memory_lifecycle ... ok
test tests::test_delete_memory ... ok
test tests::test_memory_manager_creation ... ok
test tests::test_add_and_get_memory ... ok
test tests::test_memory_types ... ok
test tests::test_update_memory ... ok
test tests::test_search_memories ... ok
test security::tests::test_permission_checking ... ok
test security::tests::test_security_system_creation ... ok
test security::tests::test_threat_detection ... ok

test result: ok. 44 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.11s

     Running unittests src/lib.rs (target/debug/deps/agent_mem_distributed-783ecd2ef2f823be)

running 18 tests
test coordination::tests::test_coordination_manager ... ok
test consensus::tests::test_consensus_manager_creation ... ok
test discovery::tests::test_service_discovery ... ok
test cluster::tests::test_cluster_manager_creation ... ok
test replication::tests::test_replication_manager ... ok
test load_balancer::tests::test_load_balancer ... ok
test consensus::tests::test_log_append ... ok
test consensus::tests::test_consensus_state ... ok
test sharding::tests::test_shard_key_hashing ... ok
test consensus::tests::test_peer_management ... ok
test sharding::tests::test_shard_assignment ... ok
test cluster::tests::test_cluster_quorum ... ok
test sharding::tests::test_shard_manager_creation ... ok
test tests::test_distributed_manager_creation ... ok
test tests::test_distributed_manager_node_id ... ok
test tests::test_distributed_manager_shutdown ... ok
test cluster::tests::test_cluster_node_health ... ok
test sharding::tests::test_node_management ... ok

test result: ok. 18 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.02s

     Running unittests src/lib.rs (target/debug/deps/agent_mem_embeddings-24f0e53a09079d15)

running 50 tests
test config::tests::test_openai_3_large_config ... ok
test config::tests::test_huggingface_config ... ok
test config::tests::test_default_config ... ok
test config::tests::test_openai_config ... ok
test config::tests::test_validate_config ... ok
test factory::tests::test_is_provider_supported ... ok
test factory::tests::test_supported_providers ... ok
test providers::cohere::tests::test_batch_size_calculation ... ok
test config::tests::test_local_config ... ok
test config::tests::test_extra_params ... ok
test factory::tests::test_create_openai_embedder_no_key ... ok
test providers::cohere::tests::test_cohere_embedding_request_serialization ... ok
test providers::huggingface::tests::test_embed_single_text ... ok
test providers::huggingface::tests::test_embed_batch ... ok
test providers::huggingface::tests::test_health_check ... ok
test providers::huggingface::tests::test_huggingface_embedder_empty_model ... ok
test providers::huggingface::tests::test_huggingface_embedder_creation ... ok
test providers::cohere::tests::test_cohere_embedding_response_deserialization ... ok
test providers::cohere::tests::test_cohere_embedder_creation_no_api_key ... ok
test providers::anthropic::tests::test_anthropic_embedder_creation_no_api_key ... ok
test providers::local::tests::test_embed_empty_batch ... ok
test factory::tests::test_create_embedder_unsupported ... ok
test providers::local::tests::test_local_embedder_creation_missing_path ... ok
test providers::local::tests::test_embed_batch ... ok
test providers::openai::tests::test_embedding_request_serialization ... ok
test providers::local::tests::test_embed_single_text ... ok
test providers::local::tests::test_health_check ... ok
test providers::openai::tests::test_embedding_request_with_dimensions ... ok
test providers::local::tests::test_health_check_missing_model ... ok
test providers::local::tests::test_local_embedder_creation_with_valid_path ... ok
test utils::tests::test_average_embeddings ... ok
test utils::tests::test_cosine_similarity ... ok
test utils::tests::test_create_random_embedding ... ok
test utils::tests::test_create_zero_embedding ... ok
test utils::tests::test_embedding_stats ... ok
test utils::tests::test_dimension_mismatch_errors ... ok
test utils::tests::test_normalize_embedding ... ok
test utils::tests::test_is_zero_embedding ... ok
test utils::tests::test_validate_embedding_dimension ... ok
test utils::tests::test_split_text_for_embedding ... ok
test providers::openai::tests::test_openai_embedder_creation_no_api_key ... ok
test providers::cohere::tests::test_cohere_embedder_properties ... ok
test providers::anthropic::tests::test_anthropic_embedder_creation_with_api_key ... ok
test providers::anthropic::tests::test_health_check ... ok
test providers::openai::tests::test_openai_embedder_creation_with_api_key ... ok
test providers::anthropic::tests::test_embed_single_text ... ok
test providers::anthropic::tests::test_embed_batch ... ok
test providers::anthropic::tests::test_deterministic_embedding ... ok
test providers::openai::tests::test_split_into_batches ... ok
test providers::cohere::tests::test_cohere_embedder_creation_with_api_key ... ok

test result: ok. 50 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.94s

     Running unittests src/lib.rs (target/debug/deps/agent_mem_intelligence-517df8350ced5377)

running 72 tests
test clustering::kmeans::tests::test_kmeans_clusterer_creation ... ok
test clustering::tests::test_clustering_utils_calculate_centroid ... ok
test clustering::tests::test_clustering_utils_euclidean_distance ... ok
test clustering::tests::test_clustering_config_default ... ok
test clustering::tests::test_dimension_mismatch ... ok
test clustering::kmeans::tests::test_empty_vectors ... ok
test clustering::kmeans::tests::test_initialize_centroids ... ok
test clustering::kmeans::tests::test_assign_to_clusters ... ok
test importance::tests::test_cosine_similarity ... ok
test importance::tests::test_calculate_frequency_score ... ok
test importance::tests::test_calculate_type_score ... ok
test clustering::tests::test_memory_cluster_creation ... ok
test clustering::kmeans::tests::test_single_vector ... ok
test clustering::kmeans::tests::test_predict_cluster ... ok
test clustering::kmeans::tests::test_cluster_memories ... ok
test importance::tests::test_importance_evaluator_creation ... ok
test importance::tests::test_evaluate_importance ... ok
test importance::tests::test_calculate_content_score ... ok
test importance::tests::test_batch_evaluate ... ok
test importance::tests::test_rank_memories ... ok
test processing::importance::tests::test_frequency_scoring ... ok
test processing::adaptive::tests::test_lifecycle_action_determination ... ok
test processing::importance::tests::test_batch_scoring ... ok
test processing::adaptive::tests::test_adaptive_manager_creation ... ok
test processing::adaptive::tests::test_capacity_management ... ok
test processing::consolidation::tests::test_consolidator_creation ... ok
test processing::importance::tests::test_emotional_scoring ... ok
test processing::importance::tests::test_importance_calculation ... ok
test processing::importance::tests::test_importance_scorer_creation ... ok
test processing::importance::tests::test_recency_scoring ... ok
test processing::tests::test_config_update ... ok
test clustering::tests::test_memory_cluster_operations ... ok
test processing::adaptive::tests::test_memory_archiving ... ok
test processing::tests::test_memory_processor_creation ... ok
test processing::adaptive::tests::test_memory_compression ... ok
test processing::tests::test_process_single_memory ... ok
test reasoning::tests::test_cosine_similarity ... ok
test reasoning::tests::test_extract_keywords ... ok
test reasoning::tests::test_discover_associations ... ok
test reasoning::tests::test_memory_reasoner_creation ... ok
test reasoning::tests::test_reason_by_content_analysis ... ok
test reasoning::tests::test_reason_by_similarity ... ok
test reasoning::tests::test_calculate_keyword_overlap ... ok
test similarity::hybrid::tests::test_calculate_confidence ... ok
test similarity::hybrid::tests::test_dimension_mismatch ... ok
test similarity::hybrid::tests::test_hybrid_similarity_creation ... ok
test similarity::semantic::tests::test_batch_similarity ... ok
test similarity::semantic::tests::test_cosine_similarity ... ok
test similarity::semantic::tests::test_dimension_mismatch ... ok
test processing::consolidation::tests::test_memory_consolidation ... ok
test processing::consolidation::tests::test_similarity_calculation ... ok
test processing::tests::test_process_memories ... ok
test similarity::semantic::tests::test_euclidean_similarity ... ok
test processing::consolidation::tests::test_consolidation_groups ... ok
test similarity::semantic::tests::test_find_most_similar ... ok
test similarity::semantic::tests::test_find_top_k_similar ... ok
test similarity::semantic::tests::test_hybrid_similarity ... ok
test similarity::semantic::tests::test_semantic_similarity_creation ... ok
test similarity::textual::tests::test_edit_distance_similarity ... ok
test similarity::textual::tests::test_extract_ngrams ... ok
test similarity::textual::tests::test_levenshtein_distance ... ok
test similarity::textual::tests::test_preprocess_text ... ok
test similarity::textual::tests::test_ngram_similarity ... ok
test similarity::textual::tests::test_textual_similarity_creation ... ok
test similarity::hybrid::tests::test_calculate_similarity ... ok
test similarity::hybrid::tests::test_adaptive_weights ... ok
test similarity::hybrid::tests::test_analyze_similarity_components ... ok
test similarity::textual::tests::test_jaccard_similarity ... ok
test similarity::hybrid::tests::test_find_most_similar ... ok
test similarity::hybrid::tests::test_batch_similarity ... ok
test similarity::textual::tests::test_find_most_similar ... ok
test similarity::textual::tests::test_batch_similarity ... ok

test result: ok. 72 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.04s

     Running unittests src/lib.rs (target/debug/deps/agent_mem_llm-4001c9c97b3fbdc0)

running 60 tests
test factory::tests::test_create_provider_unsupported ... ok
test factory::tests::test_is_provider_supported ... ok
test factory::tests::test_new_providers_supported ... ok
test factory::tests::test_supported_providers ... ok
test prompts::manager::tests::test_build_conversation_prompt ... ok
test prompts::manager::tests::test_add_custom_template ... ok
test prompts::manager::tests::test_build_system_prompt ... ok
test prompts::manager::tests::test_build_memory_extraction_prompt ... ok
test prompts::manager::tests::test_prompt_manager_creation ... ok
test prompts::templates::tests::test_add_custom_template ... ok
test prompts::templates::tests::test_get_template_names ... ok
test prompts::templates::tests::test_prompt_templates_creation ... ok
test prompts::templates::tests::test_render_template ... ok
test prompts::manager::tests::test_validate_template_variables ... ok
test providers::anthropic::tests::test_anthropic_provider_no_api_key ... ok
test factory::tests::test_create_openai_provider ... ok
test client::tests::test_llm_client_creation ... ok
test client::tests::test_get_model_info ... ok
test factory::tests::test_create_mistral_provider ... ok
test client::tests::test_prompt_manager_access ... ok
test providers::anthropic::tests::test_anthropic_provider_creation ... ok
test factory::tests::test_create_claude_provider ... ok
test factory::tests::test_create_anthropic_provider ... ok
test client::tests::test_llm_client_with_config ... ok
test client::tests::test_validate_config ... ok
test factory::tests::test_create_cohere_provider ... ok
test providers::anthropic::tests::test_convert_messages ... ok
test client::tests::test_extract_memories_prompt_building ... ok
test factory::tests::test_create_perplexity_provider ... ok
test providers::anthropic::tests::test_validate_config ... ok
test providers::azure::tests::test_azure_provider_creation ... ok
test providers::azure::tests::test_azure_provider_missing_config ... ok
test providers::claude::tests::test_available_models ... ok
test providers::claude::tests::test_claude_provider_creation ... ok
test providers::claude::tests::test_message_conversion ... ok
test providers::claude::tests::test_model_info ... ok
test providers::claude::tests::test_request_building ... ok
test providers::cohere::tests::test_available_models ... ok
test providers::cohere::tests::test_cohere_provider_creation ... ok
test providers::cohere::tests::test_message_conversion ... ok
test providers::cohere::tests::test_model_info ... ok
test providers::gemini::tests::test_gemini_provider_creation ... ok
test providers::gemini::tests::test_gemini_provider_no_api_key ... ok
test providers::mistral::tests::test_available_models ... ok
test providers::mistral::tests::test_message_conversion ... ok
test providers::mistral::tests::test_mistral_provider_creation ... ok
test providers::mistral::tests::test_model_info ... ok
test providers::mistral::tests::test_request_building ... ok
test providers::ollama::tests::test_convert_messages ... ok
test providers::ollama::tests::test_ollama_provider_creation ... ok
test providers::ollama::tests::test_validate_config ... ok
test providers::ollama::tests::test_validate_config_invalid_url ... ok
test providers::openai::tests::test_convert_messages ... ok
test providers::openai::tests::test_openai_provider_creation ... ok
test providers::openai::tests::test_openai_provider_no_api_key ... ok
test providers::openai::tests::test_validate_config ... ok
test providers::perplexity::tests::test_available_models ... ok
test providers::perplexity::tests::test_message_conversion ... ok
test providers::perplexity::tests::test_model_info ... ok
test providers::perplexity::tests::test_perplexity_provider_creation ... ok

test result: ok. 60 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.03s

     Running unittests src/lib.rs (target/debug/deps/agent_mem_performance-327f1045791e2f19)

running 28 tests
test metrics::tests::test_custom_metrics ... ok
test concurrency::tests::test_concurrency_manager_creation ... ok
test concurrency::tests::test_rate_limiter ... ok
test batch::tests::test_batch_stats ... ok
test batch::tests::test_batch_processor_creation ... ok
test concurrency::tests::test_circuit_breaker ... ok
test cache::tests::test_cache_stats ... ok
test metrics::tests::test_metrics_collector_creation ... ok
test cache::tests::test_cache_manager_creation ... ok
test cache::tests::test_cache_remove ... ok
test concurrency::tests::test_task_execution ... ok
test cache::tests::test_cache_put_get ... ok
test metrics::tests::test_record_error ... ok
test metrics::tests::test_record_request ... ok
test pool::tests::test_object_pool_creation ... ok
test pool::tests::test_memory_pool_allocate ... ok
test pool::tests::test_object_pool_get ... ok
test pool::tests::test_memory_pool_creation ... ok
test pool::tests::test_pool_stats ... ok
test query::tests::test_optimizer_statistics ... ok
test query::tests::test_query_complexity_analysis ... ok
test query::tests::test_query_optimizer_creation ... ok
test query::tests::test_query_optimization ... ok
test tests::test_performance_manager_creation ... ok
test tests::test_performance_stats ... ok
test tests::test_performance_manager_shutdown ... ok
test metrics::tests::test_metrics_timer ... ok
error: test failed, to rerun pass `-p agent-mem-performance --lib`

Caused by:
  process didn't exit successfully: `/Users/louloulin/Documents/linchong/cjproject/contextengine/agentmen/target/debug/deps/agent_mem_performance-327f1045791e2f19` (signal: 6, SIGABRT: process abort signal)
