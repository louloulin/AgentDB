 Downloading crates ...
  Downloaded riff v1.0.1
  Downloaded nalgebra-macros v0.2.2
  Downloaded approx v0.4.0
  Downloaded space v0.12.1
  Downloaded ndarray-rand v0.14.0
  Downloaded kdtree v0.7.0
  Downloaded noisy_float v0.2.0
  Downloaded order-stat v0.1.3
  Downloaded linfa-nn v0.7.2
  Downloaded bytemuck_derive v1.10.1
  Downloaded linfa-linalg v0.1.0
  Downloaded candle-nn v0.3.3
  Downloaded simba v0.8.1
  Downloaded ndarray-stats v0.5.1
  Downloaded linfa-clustering v0.7.1
  Downloaded sprs v0.11.1
  Downloaded rocksdb v0.21.0
  Downloaded linfa v0.7.1
  Downloaded candle-transformers v0.3.3
  Downloaded tokenizers v0.15.2
  Downloaded bindgen v0.65.1
  Downloaded candle-core v0.3.3
  Downloaded bindgen v0.71.1
  Downloaded nalgebra v0.32.6
  Downloaded wav v1.0.1
  Downloaded libz-sys v1.1.22
  Downloaded librocksdb-sys v0.11.0+8.1.1
    Blocking waiting for file lock on package cache
   Compiling libm v0.2.15
   Compiling num-traits v0.2.19
   Compiling libc v0.2.174
    Checking crossbeam-epoch v0.9.18
    Checking stable_deref_trait v1.2.0
    Checking aho-corasick v1.1.3
   Compiling bytemuck_derive v1.10.1
    Checking either v1.15.0
   Compiling crc32fast v1.5.0
   Compiling syn v1.0.109
   Compiling pkg-config v0.3.32
    Checking rand_chacha v0.9.0
   Compiling paste v1.0.15
   Compiling glob v0.3.3
    Checking yoke v0.8.0
   Compiling minimal-lexical v0.2.1
    Checking rand v0.9.2
   Compiling jobserver v0.1.34
    Checking crossbeam-deque v0.8.6
    Checking zerovec v0.11.4
    Checking zerotrie v0.2.2
    Checking rayon-core v1.13.0
   Compiling clang-sys v1.8.1
   Compiling cc v1.2.30
   Compiling nom v7.1.3
    Checking regex-automata v0.4.10
   Compiling libloading v0.8.8
    Checking reborrow v0.5.5
    Checking rayon v1.11.0
   Compiling enum-as-inner v0.6.1
   Compiling matrixmultiply v0.3.10
    Checking raw-cpuid v10.7.0
    Checking tinystr v0.8.1
    Checking potential_utf v0.1.3
    Checking bytemuck v1.23.2
    Checking icu_locale_core v2.0.0
    Checking sysctl v0.5.5
    Checking icu_collections v2.0.0
    Checking icu_provider v2.0.0
    Checking rawpointer v0.2.1
   Compiling bindgen v0.71.1
    Checking icu_properties v2.0.1
    Checking icu_normalizer v2.0.0
   Compiling ring v0.17.14
   Compiling cexpr v0.6.0
   Compiling prettyplease v0.2.36
   Compiling seq-macro v0.3.6
   Compiling itertools v0.13.0
    Checking regex v1.11.2
   Compiling getrandom v0.2.16
   Compiling bitflags v2.9.1
    Checking idna_adapter v1.2.1
   Compiling rustc-hash v2.1.1
    Checking idna v1.1.0
   Compiling const-random-macro v0.1.16
    Checking matchers v0.2.0
    Checking chrono v0.4.41
    Checking num-integer v0.1.46
    Checking rand_distr v0.5.1
    Checking url v2.5.7
    Checking approx v0.4.0
   Compiling cpufeatures v0.2.17
   Compiling vcpkg v0.2.15
   Compiling bindgen v0.65.1
   Compiling sha2 v0.10.9
   Compiling flate2 v1.1.2
    Checking tracing-subscriber v0.3.20
    Checking const-random v0.1.18
    Checking rand_distr v0.4.3
    Checking agent-mem-traits v2.0.0 (/Users/louloulin/Documents/linchong/cjproject/contextengine/agentmen/crates/agent-mem-traits)
   Compiling lz4-sys v1.11.1+lz4-1.10.0
   Compiling libz-sys v1.1.22
   Compiling bzip2-sys v0.1.13+1.0.8
    Checking itertools v0.10.5
   Compiling lazy_static v1.5.0
   Compiling rustc-hash v1.1.0
   Compiling peeking_take_while v0.1.2
   Compiling lazycell v1.3.0
   Compiling bitflags v1.3.2
   Compiling strsim v0.10.0
   Compiling zip v0.6.6
    Checking agent-mem-utils v2.0.0 (/Users/louloulin/Documents/linchong/cjproject/contextengine/agentmen/crates/agent-mem-utils)
    Checking agent-mem-config v2.0.0 (/Users/louloulin/Documents/linchong/cjproject/contextengine/agentmen/crates/agent-mem-config)
error: redundant closure
  --> crates/agent-mem-utils/src/json.rs:67:18
   |
67 |         .map_err(|e| agent_mem_traits::AgentMemError::SerializationError(e))?;
   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace the closure with the function itself: `agent_mem_traits::AgentMemError::SerializationError`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure
   = note: `-D clippy::redundant-closure` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(clippy::redundant_closure)]`

error: redundant closure
  --> crates/agent-mem-utils/src/json.rs:74:18
   |
74 |         .map_err(|e| agent_mem_traits::AgentMemError::SerializationError(e))
   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace the closure with the function itself: `agent_mem_traits::AgentMemError::SerializationError`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure

error: variables can be used directly in the `format!` string
  --> crates/agent-mem-utils/src/text.rs:30:9
   |
30 |         format!("{}...", truncated)
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
   = note: `-D clippy::uninlined-format-args` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(clippy::uninlined_format_args)]`
help: change this to
   |
30 -         format!("{}...", truncated)
30 +         format!("{truncated}...")
   |

error: could not compile `agent-mem-utils` (lib) due to 3 previous errors
warning: build failed, waiting for other jobs to finish...
error: unused variable: `graph_provider`
  --> crates/agent-mem-config/src/factory.rs:80:13
   |
80 |         let graph_provider = env::var("AGENT_MEM_GRAPH_PROVIDER").ok();
   |             ^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_graph_provider`
   |
   = note: `-D unused-variables` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(unused_variables)]`

error: unused variable: `api_key`
  --> crates/agent-mem-config/src/factory.rs:94:19
   |
94 |         if let Ok(api_key) = env::var("PINECONE_API_KEY") {
   |                   ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_api_key`

error: variables can be used directly in the `format!` string
   --> crates/agent-mem-config/src/factory.rs:115:72
    |
115 |             .map_err(|e| agent_mem_traits::AgentMemError::config_error(format!("Failed to read config file: {}", e)))?;
    |                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
    = note: `-D clippy::uninlined-format-args` implied by `-D warnings`
    = help: to override `-D warnings` add `#[allow(clippy::uninlined_format_args)]`
help: change this to
    |
115 -             .map_err(|e| agent_mem_traits::AgentMemError::config_error(format!("Failed to read config file: {}", e)))?;
115 +             .map_err(|e| agent_mem_traits::AgentMemError::config_error(format!("Failed to read config file: {e}")))?;
    |

error: variables can be used directly in the `format!` string
   --> crates/agent-mem-config/src/factory.rs:118:72
    |
118 |             .map_err(|e| agent_mem_traits::AgentMemError::config_error(format!("Failed to parse config file: {}", e)))?;
    |                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
118 -             .map_err(|e| agent_mem_traits::AgentMemError::config_error(format!("Failed to parse config file: {}", e)))?;
118 +             .map_err(|e| agent_mem_traits::AgentMemError::config_error(format!("Failed to parse config file: {e}")))?;
    |

error: variables can be used directly in the `format!` string
   --> crates/agent-mem-config/src/factory.rs:139:72
    |
139 |             .map_err(|e| agent_mem_traits::AgentMemError::config_error(format!("Failed to build config: {}", e)))?;
    |                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
139 -             .map_err(|e| agent_mem_traits::AgentMemError::config_error(format!("Failed to build config: {}", e)))?;
139 +             .map_err(|e| agent_mem_traits::AgentMemError::config_error(format!("Failed to build config: {e}")))?;
    |

error: variables can be used directly in the `format!` string
   --> crates/agent-mem-config/src/factory.rs:142:72
    |
142 |             .map_err(|e| agent_mem_traits::AgentMemError::config_error(format!("Failed to deserialize config: {}", e)))?;
    |                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
142 -             .map_err(|e| agent_mem_traits::AgentMemError::config_error(format!("Failed to deserialize config: {}", e)))?;
142 +             .map_err(|e| agent_mem_traits::AgentMemError::config_error(format!("Failed to deserialize config: {e}")))?;
    |

error: variables can be used directly in the `format!` string
   --> crates/agent-mem-config/src/factory.rs:152:72
    |
152 |             .map_err(|e| agent_mem_traits::AgentMemError::config_error(format!("Failed to serialize config: {}", e)))?;
    |                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
152 -             .map_err(|e| agent_mem_traits::AgentMemError::config_error(format!("Failed to serialize config: {}", e)))?;
152 +             .map_err(|e| agent_mem_traits::AgentMemError::config_error(format!("Failed to serialize config: {e}")))?;
    |

error: variables can be used directly in the `format!` string
   --> crates/agent-mem-config/src/factory.rs:155:72
    |
155 |             .map_err(|e| agent_mem_traits::AgentMemError::config_error(format!("Failed to write config file: {}", e)))?;
    |                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
155 -             .map_err(|e| agent_mem_traits::AgentMemError::config_error(format!("Failed to write config file: {}", e)))?;
155 +             .map_err(|e| agent_mem_traits::AgentMemError::config_error(format!("Failed to write config file: {e}")))?;
    |

error: this `impl` can be derived
  --> crates/agent-mem-config/src/memory.rs:28:1
   |
28 | / impl Default for MemoryConfig {
29 | |     fn default() -> Self {
30 | |         Self {
31 | |             llm: LLMConfig::default(),
...  |
39 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derivable_impls
   = note: `-D clippy::derivable-impls` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(clippy::derivable_impls)]`
help: replace the manual implementation with a derive attribute
   |
8  + #[derive(Default)]
9  ~ pub struct MemoryConfig {
   |

error: manual `!RangeInclusive::contains` implementation
  --> crates/agent-mem-config/src/validation.rs:55:12
   |
55 |         if temp < 0.0 || temp > 2.0 {
   |            ^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `!(0.0..=2.0).contains(&temp)`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_range_contains
   = note: `-D clippy::manual-range-contains` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(clippy::manual_range_contains)]`

error: could not compile `agent-mem-config` (lib) due to 10 previous errors
